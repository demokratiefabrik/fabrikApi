###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/1.10-branch/narr/environment.html
###

[app:main]
use = egg:fabrikApi
available_languages = de_CH
pyramid.default_locale_name = de_CH
; pyramid.includes = pyramid_debugtoolbar

# DEBUG
pyramid.reload_templates = true
pyramid.debug_all = true
pyramid.debug_authorization = true
pyramid.debug_notfound = true
pyramid.debug_routematch = true
# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

# fabrikApi Settings
# Disable following flag to prevent that example data is generated in DB
; example_data = false
fabrikapi.notification.limit=10


# COOKIE / SESSION  SECURITY
# pyramid.session_factory_secret
# Secure Session: EncryptedCookieSessionFactory (32 bit length)
# create binary data...
# > secret = EncryptedCookieSessionFactory::generate_secret(as_hex=False)
# convert to string
# > binascii.b2a_base64(secret)
# Probably not used; (we do not store cookies from issued by the resource server)
;pyramid.session_factory_secret = 0sglclzkPO+WPZC2LBDCKxQ96JZ+Sn0dyXnOo/5oS04=\n
; pyramid.https_only = false  # set to 'true' to enable httpsonly flag (cookies)
;pyramid.auth.secret = realsuperseekri9dhdhfkkj938409830340if0fj0sdjfdsft

# CORS: which ajax-client URLs are allowed
# cross-domain xhr calls must be authorized here. Enter full domain (incl. http and port)
# must not be *, since this does not allow to set cookies cross-sites via ajax (withCredentials)
; fabrikApi.accepted_cors_origin = http://localhost:8080
# JWT SETTINGS:

## OAUTH PROVIDERS SETUP 
# 1) fabrikAuth Oauth Provider
; oauth.fabrikAuth.secret_id = mHyhFmuLEIcKfG4SvJERojAcR4nlI7lbXGKdZLZTVxp4sttu3pqPfprSewvu95Ug9DlYO4CTe4vdAaCU8GGowCADiIX8VZWPFF1ApKxGoGK0ubSfw7JU62dQuRTJriVk
; oauth.fabrikAuth.audience = DemokratieFabrik/fabrikApi
; oauth.fabrikAuth.algoritm = HS512
; oauth.fabrikAuth.client_id = WB7Wr0Bq6Z4NTK1frTLbXSYcuXJRxV5vQoaDlbh1
# 2) Github oAuth Provider (https://github.com/settings/applications/1277223)
; oauth.github.secret_id = TOBEDEFINED
; oauth.github.client_id = TOBEDEFINED

# SENDMAIL e.g. pyramid_mailer (http://pyramid-mailer.readthedocs.org/en/latest/)
; https://pyramid-mailer.readthedocs.io/en/latest/#configuration
; mail.default_sender = demokratiefabrik.ipw@unibe.ch
; mail.host = mail.smpt.ch
; mail.username = demokratiefabrik.ipw@unibe.ch
; mail.port = 25

# DATABASE
; credentials are stored in docker secres.
; fabrikapi_db_host, fabrikapi_db_name, fabrikapi_db_user, fabrikapi_db_password
#sqlalchemy.url = sqlite:///%(here)s/untitled.sqlite
; sqlalchemy.url = mysql://demokratieplus:demokratieplus@veldev:3306/fabrikApi?charset=utf8
; sqlalchemy.url = mysql+pymysql://demokratiefabrik:demokratiefabrik@veldev:3306/fabrikApi?charset=utf8
sqlalchemy.pool_recycle = 3600
sqlalchemy.use_pymysql = true

# security Auth???
#retry.attempts = 3


###
# WSGI server configuration
###

[server:main]
use = egg:waitress#main
listen = localhost:8020

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/1.10-branch/narr/logging.html
###

[loggers]
keys = root, fabrikApi, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_fabrikApi]
level = DEBUG
handlers =
qualname = fabrikApi

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
